{"version":3,"sources":["components/BoilingVerdict/index.module.css","components/NewsDashboard/index.module.css","components/BoilingVerdict/index.tsx","components/Todo/index.tsx","components/NewsDashboard/index.tsx","components/AppMenu/AppMenu.tsx","components/List/List.tsx","components/Table/Table.tsx","components/StudentManage/index.tsx","route/route.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TemperatureFormat","TemperatureInput","props","type","value","temp","onChange","e","onTempChange","target","BoilingVerdict","TagColor","celsius","useState","temperature","setTemperature","tempNum","parseFloat","handleChange","Celsius","f","fahrenheitToCelsius","toString","fahrenheit","console","log","className","styles","container","src","alt","imgWater","Fahrenheit","textBoil","Meta","Card","NewsDashboard","state","title","data","fetch","then","response","json","setState","result","catch","style","this","map","d","index","key","card","hoverable","width","cover","date","thumbnail_pic_s","onClick","window","open","url","description","author_name","React","Component","Content","Layout","Footer","Sider","SubMenu","Menu","AppMenu","pathname","useLocation","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","Item","to","PieChartOutlined","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","FormOutlined","margin","padding","children","textAlign","List","bind","handleSubmit","event","addFunction","preventDefault","onSubmit","placeholder","currList","item","Table","tableName","row","name","rows","getValue","tableNames","createRows","StudentManage","assignments","setAssignments","students","setStudents","Object","grades","setGrades","button","setButton","handleButtonClicked","buttonName","tabChoice","assignmentName","nextState","studentName","assignment","student","score","Todo","todoList","setTodoList","doneList","setDoneList","modal","setModal","onItemDelete","from","filter","onItemChange","find","status","mappingStringToColor","s","hash","createHash","update","num","parseInt","digest","visible","onOk","onCancel","footer","destroyOnClose","onFinish","concat","split","layout","label","htmlType","block","orientation","icon","AppstoreAddOutlined","dataSource","dataIndex","render","color","text","record","RouteConfig","path","exact","Title","component","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,kCAAkC,SAAW,iCAAiC,SAAW,mC,oBCAvHD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,MAAQ,6BAA6B,KAAO,8B,8MCGtGC,E,oIAWL,SAASC,EAAiBC,GAIxB,OACE,kCACE,kDAAwBA,EAAMC,KAA9B,KACA,2BAAOC,MAAOF,EAAMG,KAAMC,SANT,SAACC,GACpBL,EAAMM,aAAaD,EAAEE,OAAOL,MAAOF,EAAMC,SAGzC,W,SAhBCH,K,kBAAAA,E,yBAAAA,M,KAoEUU,IC5DVC,ED4DUD,EA7Cf,WAA2B,IAWIE,EAXL,EACcC,mBAAS,KADvB,mBACjBC,EADiB,KACJC,EADI,KAElBC,EAAUC,WAAWH,GACrBI,EAAe,SAACb,EAAcF,GAClC,GAAIA,IAASH,EAAkBmB,QAC7BJ,EAAeV,OACV,CACL,IAAMe,EAAIC,EAAoBJ,WAAWZ,IACzCU,EAAeK,EAAEE,cAMfD,EAAsB,SAACE,GAC3B,OAA4B,GAAnBA,EAAa,IAAW,GAGnC,OADAC,QAAQC,IAAIT,GAEV,yBAAKU,UAAWC,IAAOC,WACrB,yBACEC,IAAI,kGACJC,IAAI,GACJJ,UAAWC,IAAOI,WAEpB,kBAAC9B,EAAD,CACEE,KAAMH,EAAkBmB,QACxBd,KAAMS,EACNN,aAAcU,IAGhB,kBAACjB,EAAD,CACEE,KAAMH,EAAkBgC,WACxB3B,MAtBuBO,EAsBGI,EArBZ,EAAVJ,EAAe,EAAI,IAqBYU,WACnCd,aAAcU,IAEfF,GAAW,IACV,uBAAGU,UAAWC,IAAOM,UAArB,yBAEA,0D,2BE9DAC,EAASC,IAATD,KAgDOE,E,YAtCb,WAAYlC,GAAY,IAAD,8BACrB,4CAAMA,KACDmC,MAAQ,CACXC,MAAO,QACPC,KAAM,IAJa,E,iFAQF,IAAD,OAClBC,MAlBQ,aAmBLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAF,GACJf,QAAQC,IAAIc,GACZ,EAAKK,SAAS,CAAEL,KAAMA,EAAKM,OAAON,UAEnCO,OAAM,SAAAvC,GAAC,OAAIiB,QAAQC,IAAIlB,Q,+BAI1B,OACE,yBAAKmB,UAAWqB,IAAMnB,WACnBoB,KAAKX,MAAME,KAAKU,KAAI,SAACC,EAAQC,GAAT,OACnB,kBAAC,IAAD,CACEC,IAAKD,EACLzB,UAAWqB,IAAMM,KACjBC,WAAS,EACTP,MAAO,CAAEQ,MAAO,KAChBC,MAAO,yBAAK1B,IAAKoB,EAAEO,KAAM5B,IAAKqB,EAAEQ,kBAChCC,QAAS,kBAAMC,OAAOC,KAAKX,EAAEY,OAE7B,kBAAC5B,EAAD,CAAMI,MAAOY,EAAEZ,MAAOyB,YAAab,EAAEc,uB,GA/BrBC,IAAMC,W,uECD1BC,EAA2BC,IAA3BD,QAASE,EAAkBD,IAAlBC,OAAQC,EAAUF,IAAVE,MACjBC,EAAYC,IAAZD,QA0EOE,EAxEC,SAACvE,GAAkC,IACzCwE,EAAaC,cAAbD,SADwC,EAEd7D,oBAAS,GAFK,mBAEzC+D,EAFyC,KAE9BC,EAF8B,KAMhD,OACE,kBAAC,IAAD,CAAQ9B,MAAO,CAAE+B,UAAW,UAC1B,kBAACR,EAAD,CAAOS,aAAW,EAACH,UAAWA,EAAWI,WALzB,WAClBH,GAAcD,KAKV,yBAAKlD,UAAU,SACf,kBAAC,IAAD,CAAMuD,MAAM,OAAOC,oBAAqB,CAACR,GAAWS,KAAK,UACvD,kBAAC,IAAKC,KAAN,CAAWhC,IAAI,KACb,kBAAC,IAAD,CAASiC,GAAG,KACV,kBAACC,EAAA,EAAD,MACA,wCAGJ,kBAAC,IAAKF,KAAN,CAAWhC,IAAI,SACb,kBAAC,IAAD,CAASiC,GAAG,SACV,kBAACE,EAAA,EAAD,MACA,8CAGJ,kBAAC,IAAKH,KAAN,CAAWhC,IAAI,YACb,kBAAC,IAAD,CAASiC,GAAG,YACV,kBAACG,EAAA,EAAD,MACA,2CAGJ,kBAACjB,EAAD,CACEnB,IAAI,OACJd,MACE,8BACE,kBAACmD,EAAA,EAAD,MACA,wCAIJ,kBAAC,IAAKL,KAAN,CAAWhC,IAAI,KAAf,UACA,kBAAC,IAAKgC,KAAN,CAAWhC,IAAI,KAAf,WAEF,kBAAC,IAAKgC,KAAN,CAAWhC,IAAI,UACb,kBAAC,IAAD,CAASiC,GAAG,UACV,kBAACK,EAAA,EAAD,MACA,wCAGJ,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAD,CAASC,GAAG,SACV,kBAACM,EAAA,EAAD,MACA,0CAKR,kBAAC,IAAD,CAAQjE,UAAU,eAChB,kBAACyC,EAAD,CAASpB,MAAO,CAAE6C,OAAQ,WACxB,yBACElE,UAAU,yBACVqB,MAAO,CAAE8C,QAAS,GAAIf,UAAW,MAEhC5E,EAAM4F,WAGX,kBAACzB,EAAD,CAAQtB,MAAO,CAAEgD,UAAW,WAA5B,6C,iBCXOC,E,YAtDb,WAAY9F,GAAgB,IAAD,8BACzB,4CAAMA,KACDmC,MAAQ,CACXjC,MAAO,IAGT,EAAKc,aAAe,EAAKA,aAAa+E,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPK,E,0EAUdE,GACXnD,KAAKJ,SAAS,CAAExC,MAAO+F,EAAM1F,OAAOL,U,mCAGzB+F,GACXnD,KAAKJ,SAAS,CACZxC,MAAO,KAGT4C,KAAK9C,MAAMkG,YAAYpD,KAAKX,MAAMjC,OAClC+F,EAAME,mB,+BAIN,OACE,yBAAK3E,UAAU,iBAEb,uBAAGA,UAAU,MAAMsB,KAAK9C,MAAMoC,OAC9B,0BAAMgE,SAAUtD,KAAKkD,cACnB,+BACE,2BACExE,UAAU,wBACVvB,KAAK,OACLoG,YAAavD,KAAK9C,MAAMqG,YACxBnG,MAAO4C,KAAKX,MAAMjC,MAClBE,SAAU0C,KAAK9B,gBAGnB,2BAAOQ,UAAU,aAAavB,KAAK,SAASC,MAAM,YAEpD,wBAAIsB,UAAU,OACZ,yBAAKA,UAAU,cAAcsB,KAAK9C,MAAMoC,OACvCU,KAAK9C,MAAMsG,SAASvD,KAAI,SAACwD,EAAMtD,GAAP,OACvB,wBAAIzB,UAAU,UAAU0B,IAAKD,GAC1B,IACAsD,EAAM,c,GA9CFxC,IAAMC,WCwCVwC,E,iLA3CJnE,EAAWoE,EAAmBC,GACrC,OAAID,KAAapE,GAAQqE,KAAOrE,EAAKoE,GAC5BpE,EAAKoE,GAAWC,GAEhB,c,iCAIAC,GAAe,IAAD,OACvB,OACE,6BACG7D,KAAK9C,MAAM4G,KAAK7D,KAAI,SAAC2D,EAAKzD,GAAN,OACnB,yBAAKzB,UAAU,uCACZkF,EACD,2BACElF,UAAU,wBACVvB,KAAK,OACLoG,YAAa,EAAKQ,SAAS,EAAK7G,MAAMqC,KAAMsE,EAAMD,GAClDtG,SAAU,SAAA6F,GAAK,OACb,EAAKjG,MAAMkG,YAAYS,EAAMD,EAAKT,EAAM1F,OAAOL,iB,+BAQnD,IAAD,OACP,OACE,6BACG4C,KAAK9C,MAAM8G,WAAW/D,KAAI,SAAC4D,EAAM1D,GAAP,OACzB,yBAAKzB,UAAU,QACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,wBAAwBmF,GACvC,6BAAM,EAAKI,WAAWJ,c,GAnChB5C,IAAMC,WCgGXgD,EArGO,WAAO,IAAD,EACYrG,mBAAwB,IADpC,mBACnBsG,EADmB,KACNC,EADM,OAEMvG,mBAAwB,IAF9B,mBAEnBwG,EAFmB,KAETC,EAFS,OAGEzG,mBAAS0G,QAHX,mBAGnBC,EAHmB,KAGXC,EAHW,OAIE5G,mBAAS,IAJX,mBAInB6G,EAJmB,KAIXC,EAJW,KAMpBC,EAAsB,SAACC,GAC3BF,EAAUE,IAsBRC,EAAY,8BAsChB,MAnCe,gBAAXJ,IACFI,EACE,kBAAC,EAAD,CACEvB,YAAY,oBACZC,SAAUW,EACVf,YA1BgB,SAAC2B,GACrB,IAAMC,EAAS,sBAAOb,GAAP,CAAoBY,IACnCX,EAAeY,IAyBX1F,MAAM,iBAOG,aAAXoF,IACFI,EACE,kBAAC,EAAD,CACEvB,YAAY,iBACZC,SAAUa,EACVjB,YAjCa,SAAC6B,GAClBX,EAAY,GAAD,mBAAKD,GAAL,CAAeY,MAiCtB3F,MAAM,oBAMG,WAAXoF,IACFI,EACE,kBAAC,EAAD,CACEd,WAAYG,EACZL,KAAMO,EACNjB,YAzCW,SAAC8B,EAAoBC,EAAiBC,GAC/CF,KAAcV,IAClBA,EAAOU,GAAc,IAEvBV,EAAOU,GAAYC,GAAWC,EAC9BX,EAAUD,IAqCNjF,KAAMiF,KAKV,oCACE,yBAAK9F,UAAU,wBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,wCAAd,eAGJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,0BACb,4BACEA,UAAU,kBACViC,QAAS,kBAAMiE,EAAoB,iBAFrC,eAMA,4BACElG,UAAU,kBACViC,QAAS,kBAAMiE,EAAoB,cAFrC,YAMA,4BACElG,UAAU,kBACViC,QAAS,kBAAMiE,EAAoB,YAFrC,YAQHE,I,sHLxFFnH,O,qBAAAA,I,aAAAA,I,qBAAAA,I,mBAAAA,I,eAAAA,I,eAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,uBAAAA,I,qBAAAA,M,KAcL,IAyJe0H,GAzJF,WAAO,IAAD,EACexH,mBAA+B,IAD9C,mBACVyH,EADU,KACAC,EADA,OAEe1H,mBAA0B,IAFzC,mBAEV2H,EAFU,KAEAC,EAFA,OAGS5H,qBAHT,mBAGV6H,EAHU,KAGHC,EAHG,KAmBXC,EAAe,SAACxF,EAAayF,GACpB,SAATA,EACFJ,EAAYD,EAASM,QAAO,SAAArC,GAAI,OAAIA,EAAKrD,MAAQA,MAC/B,SAATyF,GACTN,EAAYD,EAASQ,QAAO,SAAArC,GAAI,OAAIA,EAAKrD,MAAQA,OAG/C2F,EAAe,SAAC3F,EAAayF,GACjC,GAAa,SAATA,EAAiB,CACnB,IAAMpC,EAAO6B,EAASU,MAAK,SAAAvC,GAAI,OAAIA,EAAKrD,MAAQA,KAC5CqD,IACFA,EAAKwC,OAAO,GAAK,OACjBV,EAAYD,EAASQ,QAAO,SAAArC,GAAI,OAAIA,EAAKrD,MAAQA,MACjDqF,EAAY,GAAD,mBAAKD,GAAL,CAAe/B,WAEvB,GAAa,SAAToC,EAAiB,CAC1B,IAAMpC,EAAO+B,EAASQ,MAAK,SAAAvC,GAAI,OAAIA,EAAKrD,MAAQA,KAC5CqD,IACFA,EAAKwC,OAAO,GAAK,OACjBR,EAAYD,EAASM,QAAO,SAAArC,GAAI,OAAIA,EAAKrD,MAAQA,MACjDmF,EAAY,GAAD,mBAAKD,GAAL,CAAe7B,QAK1ByC,EAAuB,SAACC,GAC5B,IAAMC,EAAOC,sBAAW,UACxBD,EAAKE,OAAOH,GACZ,IAAII,EAAMC,SAASJ,EAAKK,OAAO,OAAQ,IACvC,OAAO9I,EAAS4I,EA/DH,KAiEf,OACE,6BACE,kBAAC,IAAD,CACEjH,MAAM,WACNoH,QAAShB,EACTiB,KAlDY,kBAAMhB,GAAS,IAmD3BiB,SAlDgB,kBAAMjB,GAAS,IAmD/BkB,OAAQ,KACRC,gBAAc,GAEd,kBAAC,IAAD,0CACA,kBAAC,IAAD,CAAMC,SArDS,SAAC3J,GACpBmI,EAAY,GAAD,mBACND,GADM,CAET,CACElF,IAAKhD,EAAMyG,KACXA,KAAMzG,EAAMyG,KACZoC,OAAQ,CAAC,QAAQe,OAAO5J,EAAM6I,OAAOgB,MAAM,UAG/CtB,GAAS,IA4CyBuB,OAAO,YACnC,kBAAC,IAAK9E,KAAN,CAAW+E,MAAM,OAAOtD,KAAK,QAC3B,kBAAC,IAAD,OAEF,kBAAC,IAAKzB,KAAN,CAAW+E,MAAM,SAAStD,KAAK,UAC7B,kBAAC,IAAD,OAEF,kBAAC,IAAKzB,KAAN,KACE,kBAAC,IAAD,CAAQjF,KAAK,UAAUiK,SAAS,SAASC,OAAK,GAA9C,aAMN,kBAAC,IAAD,CAASC,YAAY,QAArB,aAEE,kBAAC,IAAD,CAASnK,KAAK,aACd,kBAAC,IAAD,CACEwD,QAxEc,kBAAMgF,GAAS,IAyE7BxI,KAAK,UACLoK,KAAM,kBAACC,GAAA,EAAD,OAHR,aAQF,kBAAC,IAAD,CAAOC,WAAYnC,GACjB,kBAAC,IAAD,CAAQhG,MAAM,OAAOoI,UAAU,OAAOtH,IAAI,SAC1C,kBAAC,IAAD,CACEd,MAAM,SACNoI,UAAU,SACVtH,IAAI,SACJuH,OAAQ,SAAC1B,GAAD,OACN,8BACGA,EAAOhG,KAAI,SAAAkG,GAAC,OACX,kBAAC,IAAD,CAAKyB,MAAO1B,EAAqBC,GAAI/F,IAAK+F,GACvCA,UAMX,kBAAC,IAAD,CACE7G,MAAM,YACNc,IAAI,YACJuH,OAAQ,SAACE,EAAMC,EAAa3H,GAApB,OACN,8BACE,kBAAC,IAAD,CAAQQ,QAAS,kBAAMoF,EAAa+B,EAAO1H,IAAK,UAAhD,cAGA,kBAAC,IAAD,CAAQO,QAAS,kBAAMiF,EAAakC,EAAO1H,IAAK,UAAhD,eAOR,kBAAC,IAAD,CAASkH,YAAY,QAArB,cACA,kBAAC,IAAD,CAAOG,WAAYjC,GACjB,kBAAC,IAAD,CAAQlG,MAAM,OAAOoI,UAAU,OAAOtH,IAAI,SAC1C,kBAAC,IAAD,CACEd,MAAM,SACNoI,UAAU,SACVtH,IAAI,SACJuH,OAAQ,SAAC1B,GAAD,OACN,8BACGA,EAAOhG,KAAI,SAAAkG,GAAC,OACX,kBAAC,IAAD,CAAKyB,MAAO1B,EAAqBC,GAAI/F,IAAK+F,GACvCA,UAMX,kBAAC,IAAD,CACE7G,MAAM,YACNc,IAAI,YACJuH,OAAQ,SAACE,EAAMC,EAAa3H,GAApB,OACN,8BACE,kBAAC,IAAD,CAAQQ,QAAS,kBAAMoF,EAAa+B,EAAO1H,IAAK,UAAhD,QAGA,kBAAC,IAAD,CAAQO,QAAS,kBAAMiF,EAAakC,EAAO1H,IAAK,UAAhD,iBMvIC2H,GAxBK,WAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,KAChB,kBAAC,IAAWE,MAAZ,CAAkBnI,MAAO,CAAEgD,UAAW,WAAtC,sBAIF,kBAAC,IAAD,CAAOiF,KAAK,SAASG,UAAW/I,IAChC,kBAAC,IAAD,CAAO4I,KAAK,QAAQG,UAAWzK,IAC/B,kBAAC,IAAD,CAAOsK,KAAK,WAAWG,UAAWjE,IAClC,kBAAC,IAAD,CAAO8D,KAAK,SACV,kBAAC,GAAD,YCdCI,G,iLAJX,OAAO,kBAAC,GAAD,U,GAFOnH,IAAMC,WCQJmH,QACW,cAA7BzH,OAAO0H,SAASC,UAEe,UAA7B3H,OAAO0H,SAASC,UAEhB3H,OAAO0H,SAASC,SAASC,MACvB,2DCZNC,IAASd,OAAO,kBAAC,GAAD,MAASe,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrJ,MAAK,SAAAsJ,GACjCA,EAAaC,kB","file":"static/js/main.f5959e5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BoilingVerdict_container__8em18\",\"imgWater\":\"BoilingVerdict_imgWater__3fUEF\",\"textBoil\":\"BoilingVerdict_textBoil__98knA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewsDashboard_container__39Khm\",\"title\":\"NewsDashboard_title__rXdns\",\"card\":\"NewsDashboard_card__hL_ow\"};","import { useState, ChangeEvent } from \"react\";\nimport React from \"react\";\nimport styles from \"./index.module.css\";\n\nenum TemperatureFormat {\n  Celsius = \"Celsius\",\n  Fahrenheit = \"Fahrenheit\"\n}\n\ntype TemperatureInputProps = {\n  temp: string;\n  type: TemperatureFormat;\n  onTempChange: (temp: string, type: TemperatureFormat) => void;\n};\n\nfunction TemperatureInput(props: TemperatureInputProps) {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onTempChange(e.target.value, props.type);\n  };\n  return (\n    <fieldset>\n      <legend>Temperature in {props.type}:</legend>\n      <input value={props.temp} onChange={handleChange} />℃\n    </fieldset>\n  );\n}\n\nfunction BoilingVerdict() {\n  const [temperature, setTemperature] = useState(\"0\");\n  const tempNum = parseFloat(temperature);\n  const handleChange = (temp: string, type: TemperatureFormat) => {\n    if (type === TemperatureFormat.Celsius) {\n      setTemperature(temp);\n    } else {\n      const f = fahrenheitToCelsius(parseFloat(temp));\n      setTemperature(f.toString());\n    }\n  };\n  const celsiusToFahrenheit = (celsius: number) => {\n    return (celsius * 9) / 5 + 32;\n  };\n  const fahrenheitToCelsius = (fahrenheit: number) => {\n    return ((fahrenheit - 32) * 5) / 9;\n  };\n  console.log(tempNum);\n  return (\n    <div className={styles.container}>\n      <img\n        src=\"https://img.mp.itc.cn/q_70,c_zoom,w_640/upload/20170407/84a2a06d7c8d4cde904f784200465bce_th.jpg\"\n        alt=\"\"\n        className={styles.imgWater}\n      />\n      <TemperatureInput\n        type={TemperatureFormat.Celsius}\n        temp={temperature}\n        onTempChange={handleChange}\n      />\n\n      <TemperatureInput\n        type={TemperatureFormat.Fahrenheit}\n        temp={celsiusToFahrenheit(tempNum).toString()}\n        onTempChange={handleChange}\n      />\n      {tempNum >= 100 ? (\n        <p className={styles.textBoil}>The water would boil.</p>\n      ) : (\n        <p>The water would not boil.</p>\n      )}\n    </div>\n  );\n}\n\nexport default BoilingVerdict;\n","import React, { useState } from \"react\";\nimport { Divider, Table, Button, Tag, Modal, Form, Input } from \"antd\";\nimport Column from \"antd/lib/table/Column\";\nimport { AppstoreAddOutlined } from \"@ant-design/icons\";\nimport { createHash } from \"crypto\";\n\ninterface TodoTableItem {\n  key: string;\n  name: string;\n  status: string[];\n}\nconst ColorLen = 11;\nenum TagColor {\n  \"magenta\",\n  \"red\",\n  \"volcano\",\n  \"orange\",\n  \"gold\",\n  \"lime\",\n  \"green\",\n  \"cyan\",\n  \"blue\",\n  \"geekblue\",\n  \"purple\"\n}\n\nconst Todo = () => {\n  const [todoList, setTodoList] = useState<Array<TodoTableItem>>([]);\n  const [doneList, setDoneList] = useState<TodoTableItem[]>([]);\n  const [modal, setModal] = useState<boolean>();\n\n  const onModalOk = () => setModal(false);\n  const onModalCancel = () => setModal(false);\n  const onButtonClick = () => setModal(true);\n  const onFormFinish = (value: any) => {\n    setTodoList([\n      ...todoList,\n      {\n        key: value.name,\n        name: value.name,\n        status: [\"TODO\"].concat(value.status.split(\" \"))\n      }\n    ]);\n    setModal(false);\n  };\n  const onItemDelete = (key: string, from: \"todo\" | \"done\") => {\n    if (from === \"done\") {\n      setDoneList(doneList.filter(item => item.key !== key));\n    } else if (from === \"todo\") {\n      setTodoList(todoList.filter(item => item.key !== key));\n    }\n  };\n  const onItemChange = (key: string, from: \"todo\" | \"done\") => {\n    if (from === \"todo\") {\n      const item = todoList.find(item => item.key === key);\n      if (item) {\n        item.status[0] = \"DONE\";\n        setTodoList(todoList.filter(item => item.key !== key));\n        setDoneList([...doneList, item]);\n      }\n    } else if (from === \"done\") {\n      const item = doneList.find(item => item.key === key);\n      if (item) {\n        item.status[0] = \"TODO\";\n        setDoneList(doneList.filter(item => item.key !== key));\n        setTodoList([...todoList, item]);\n      }\n    }\n  };\n  // Make Tag more colorful\n  const mappingStringToColor = (s: string) => {\n    const hash = createHash(\"sha256\");\n    hash.update(s);\n    let num = parseInt(hash.digest(\"hex\"), 16);\n    return TagColor[num % ColorLen];\n  };\n  return (\n    <div>\n      <Modal\n        title=\"Add TODO\"\n        visible={modal}\n        onOk={onModalOk}\n        onCancel={onModalCancel}\n        footer={null}\n        destroyOnClose\n      >\n        <Divider>Add new things to your Todo List.</Divider>\n        <Form onFinish={onFormFinish} layout=\"vertical\">\n          <Form.Item label=\"name\" name=\"name\">\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"status\" name=\"status\">\n            <Input />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Sumbit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Divider orientation=\"left\">\n        Todo List:\n        <Divider type=\"vertical\" />\n        <Button\n          onClick={onButtonClick}\n          type=\"primary\"\n          icon={<AppstoreAddOutlined />}\n        >\n          Add Todo\n        </Button>\n      </Divider>\n      <Table dataSource={todoList}>\n        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n        <Column\n          title=\"status\"\n          dataIndex=\"status\"\n          key=\"status\"\n          render={(status: string[]) => (\n            <span>\n              {status.map(s => (\n                <Tag color={mappingStringToColor(s)} key={s}>\n                  {s}\n                </Tag>\n              ))}\n            </span>\n          )}\n        />\n        <Column\n          title=\"operation\"\n          key=\"operation\"\n          render={(text, record: any, index) => (\n            <span>\n              <Button onClick={() => onItemChange(record.key, \"todo\")}>\n                Finish it!\n              </Button>\n              <Button onClick={() => onItemDelete(record.key, \"todo\")}>\n                Delete\n              </Button>\n            </span>\n          )}\n        />\n      </Table>\n      <Divider orientation=\"left\">Done List:</Divider>\n      <Table dataSource={doneList}>\n        <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n        <Column\n          title=\"status\"\n          dataIndex=\"status\"\n          key=\"status\"\n          render={(status: string[]) => (\n            <span>\n              {status.map(s => (\n                <Tag color={mappingStringToColor(s)} key={s}>\n                  {s}\n                </Tag>\n              ))}\n            </span>\n          )}\n        />\n        <Column\n          title=\"operation\"\n          key=\"operation\"\n          render={(text, record: any, index) => (\n            <span>\n              <Button onClick={() => onItemChange(record.key, \"done\")}>\n                UNDO\n              </Button>\n              <Button onClick={() => onItemDelete(record.key, \"done\")}>\n                Delete\n              </Button>\n            </span>\n          )}\n        />\n      </Table>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport style from \"./index.module.css\";\nimport { Card } from \"antd\";\n\nconst { Meta } = Card;\nconst url = \"news.json\";\n//   \"http://v.juhe.cn/toutiao/index?type=top&key=3dc86b09a2ee2477a5baa80ee70fcdf5\";\n\ninterface state {\n  title: string;\n  data: Array<Object>;\n}\n\nclass NewsDashboard extends React.Component<{}, state> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      title: \"Hahah\",\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ data: data.result.data });\n      })\n      .catch(e => console.log(e));\n  }\n\n  render() {\n    return (\n      <div className={style.container}>\n        {this.state.data.map((d: any, index) => (\n          <Card\n            key={index}\n            className={style.card}\n            hoverable\n            style={{ width: 240 }}\n            cover={<img alt={d.date} src={d.thumbnail_pic_s} />}\n            onClick={() => window.open(d.url)}\n          >\n            <Meta title={d.title} description={d.author_name} />\n          </Card>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default NewsDashboard;\n","import React, { PropsWithChildren, useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  FormOutlined\n} from \"@ant-design/icons\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n\nconst { Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst AppMenu = (props: PropsWithChildren<{}>) => {\n  const { pathname } = useLocation();\n  const [collapsed, setCollapsed] = useState(false);\n  const onCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapsed}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={[pathname]} mode=\"inline\">\n          <Menu.Item key=\"/\">\n            <NavLink to=\"/\">\n              <PieChartOutlined />\n              <span>Home</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/boil\">\n            <NavLink to=\"/boil\">\n              <DesktopOutlined />\n              <span>Boil Water</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/student\">\n            <NavLink to=\"/student\">\n              <UserOutlined />\n              <span>Student</span>\n            </NavLink>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub2\"\n            title={\n              <span>\n                <TeamOutlined />\n                <span>Team</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"6\">Team 1</Menu.Item>\n            <Menu.Item key=\"8\">Team 2</Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"/board\">\n            <NavLink to=\"/board\">\n              <FileOutlined />\n              <span>News</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item>\n            <NavLink to=\"/todo\">\n              <FormOutlined />\n              <span>TODO</span>\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Content style={{ margin: \"0 16px\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          Ant Design ©2018 Created by Ant UED\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default AppMenu;\n","import React from \"react\";\n\ninterface IProps {\n  title: string;\n  placeholder: string;\n  addFunction: (value: string) => void;\n  currList: Array<string>;\n}\n\ninterface IState {\n  value: string;\n}\n\nclass List extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event: any) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event: any) {\n    this.setState({\n      value: \"\"\n    });\n\n    this.props.addFunction(this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"col-6 mx-auto\">\n        {/*Replace the code below to call the title prop*/}\n        <p className=\"h2\">{this.props.title}</p>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <input\n              className=\"form-control input-sm\"\n              type=\"text\"\n              placeholder={this.props.placeholder}\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input className=\"btn btn-sm\" type=\"submit\" value=\"Submit\" />\n        </form>\n        <ul className=\"Box\">\n          <div className=\"Box-header\">{this.props.title}</div>\n          {this.props.currList.map((item, index) => (\n            <li className=\"Box-row\" key={index}>\n              {\" \"}\n              {item}{\" \"}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React from \"react\";\n\ninterface props {\n  rows: Array<string>;\n  tableNames: Array<string>;\n  data: any;\n  addFunction: (name: string, row: string, value: string) => void;\n}\n\nclass Table extends React.Component<props, {}> {\n  getValue(data: any, tableName: string, row: string) {\n    if (tableName in data && row in data[tableName]) {\n      return data[tableName][row];\n    } else {\n      return \"Add Score\";\n    }\n  }\n\n  createRows(name: string) {\n    return (\n      <div>\n        {this.props.rows.map((row, index) => (\n          <div className=\"Box-row d-flex flex-justify-between\">\n            {row}\n            <input\n              className=\"form-control input-sm\"\n              type=\"text\"\n              placeholder={this.getValue(this.props.data, name, row)}\n              onChange={event =>\n                this.props.addFunction(name, row, event.target.value)\n              }\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n  render() {\n    return (\n      <div>\n        {this.props.tableNames.map((name, index) => (\n          <div className=\"pt-6\">\n            <div className=\"Box col-6 mx-auto\">\n              <div className=\"Box-header Box-title\">{name}</div>\n              <div>{this.createRows(name)}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport List from \"../List/List\";\nimport Table from \"../Table/Table\";\n\nconst StudentManage = () => {\n  const [assignments, setAssignments] = useState<Array<string>>([]);\n  const [students, setStudents] = useState<Array<string>>([]);\n  const [grades, setGrades] = useState(Object);\n  const [button, setButton] = useState(\"\");\n\n  const handleButtonClicked = (buttonName: string) => {\n    setButton(buttonName);\n  };\n\n  /*Check out this addAssignment method*/\n  const addAssignment = (assignmentName: string) => {\n    const nextState = [...assignments, assignmentName];\n    setAssignments(nextState);\n  };\n\n  /*Write an addStudent method here*/\n  const addStudent = (studentName: string) => {\n    setStudents([...students, studentName]);\n  };\n\n  const addGrade = (assignment: string, student: string, score: string) => {\n    if (!(assignment in grades)) {\n      grades[assignment] = {};\n    }\n    grades[assignment][student] = score;\n    setGrades(grades);\n  };\n\n  let tabChoice = <div />;\n\n  /*Uncomment below to render assignments*/\n  if (button === \"assignments\") {\n    tabChoice = (\n      <List\n        placeholder=\"Add Assignment...\"\n        currList={assignments}\n        addFunction={addAssignment}\n        title=\"Assignments\"\n      />\n    );\n  }\n\n  /* Change below to render students*/\n\n  if (button === \"students\") {\n    tabChoice = (\n      <List\n        placeholder=\"Add Student...\"\n        currList={students}\n        addFunction={addStudent}\n        title=\"Student Roster\"\n      />\n    );\n  }\n\n  /* Uncomment lines below to render grades*/\n  if (button === \"grades\") {\n    tabChoice = (\n      <Table\n        tableNames={assignments}\n        rows={students}\n        addFunction={addGrade}\n        data={grades}\n      />\n    );\n  }\n  return (\n    <>\n      <div className=\"Box Box--spacious f4\">\n        <div className=\"Box-header\">\n          <h3 className=\"Box-title d-flex flex-justify-center\">GradeBook</h3>\n        </div>\n      </div>\n      <nav className=\"UnderlineNav d-flex flex-justify-center\">\n        <div className=\"UnderlineNav-body pt-6\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handleButtonClicked(\"assignments\")}\n          >\n            Assignments\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handleButtonClicked(\"students\")}\n          >\n            Students\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handleButtonClicked(\"grades\")}\n          >\n            Grades\n          </button>\n        </div>\n      </nav>\n      {tabChoice}\n    </>\n  );\n};\n\nexport default StudentManage;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport BoilingVerdict from \"../components/BoilingVerdict\";\nimport NewsDashboard from \"../components/NewsDashboard\";\nimport AppMenu from \"../components/AppMenu/AppMenu\";\nimport StudentManage from \"../components/StudentManage\";\nimport { Typography } from \"antd\";\nimport Todo from \"../components/Todo\";\n\nconst RouteConfig = () => {\n  return (\n    <Router>\n      <Route path=\"/\">\n        <AppMenu>\n          <Switch>\n            <Route exact path=\"/\">\n              <Typography.Title style={{ textAlign: \"center\" }}>\n                Welcome to React.\n              </Typography.Title>\n            </Route>\n            <Route path=\"/board\" component={NewsDashboard} />\n            <Route path=\"/boil\" component={BoilingVerdict} />\n            <Route path=\"/student\" component={StudentManage} />\n            <Route path=\"/todo\">\n              <Todo />\n            </Route>\n          </Switch>\n        </AppMenu>\n      </Route>\n    </Router>\n  );\n};\n\nexport default RouteConfig;\n","import React from \"react\";\nimport \"./App.css\";\nimport RouteConfig from \"./route/route\";\n\nclass App extends React.Component {\n  render() {\n    return <RouteConfig />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}